version: 2.1

orbs:
  node: circleci/node@5.0.2

jobs:
  build:
    docker:
      - image: cimg/php:8.1-node
      - image: mysql:8.0
        environment:
          MYSQL_DATABASE: ${CI_MYSQL_DATABASE}
          MYSQL_USER: ${CI_MYSQL_USER}
          MYSQL_PASSWORD: ${CI_MYSQL_PASSWORD}
          MYSQL_ROOT_PASSWORD: ${CI_MYSQL_ROOT_PASSWORD}
          TZ: ${CI_TZ}

    working_directory: ~/project

    steps:
      - checkout:
          submodules: false # サブモジュールは手動で初期化するので、ここでは無効にします

      - add_ssh_keys:
          fingerprints:
            - "${CI_SSH_FINGERPRINT_ROOT}"
            - "${CI_SSH_FINGERPRINT_API}"
            - "${CI_SSH_FINGERPRINT_FRONT}"

      - run:
          name: Configure SSH for GitHub
          command: |
            mkdir -p ~/.ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            chmod 600 ~/.ssh/config

      - run:
          name: Debug SSH keys
          command: |
            ssh-add -l
            ls -la ~/.ssh

      - run:
          name: Checkout Submodules with SSH
          command: |
            git submodule sync
            git submodule update --init --recursive --depth 1

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "~/project/api/src/composer.lock" }}
            - composer-v1-

      - run:
          name: Install Composer Dependencies
          command: |
            cd ~/project/api/src
            composer install --no-interaction --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "~/project/api/src/composer.lock" }}
          paths:
            - ~/project/api/src/vendor

      - run:
          name: Create .env file
          command: |
            cd ~/project/api/src
            cp .env.example .env
            sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
            sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${CI_DB_PASSWORD}/" .env
            php artisan key:generate
            php artisan jwt:secret

      - run:
          name: Wait for DB
          command: |
            dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: Run database migrations and seed
          command: |
            cd ~/project/api/src
            php artisan migrate --force --seed

      - run:
          name: Run Laravel tests
          command: |
            cd ~/project/api/src
            php artisan test

      - node/install:
          node-version: "18.17.0"

      - restore_cache:
          keys:
            - node-v1-{{ checksum "~/project/front/package-lock.json" }}
            - node-v1-

      - run:
          name: Install Node.js dependencies
          working_directory: ~/project/front
          command: npm install

      - save_cache:
          key: node-v1-{{ checksum "~/project/front/package-lock.json" }}
          paths:
            - ~/project/front/node_modules

      - run:
          name: Run frontend tests
          working_directory: ~/project/front
          command: npm test

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          context: my-context
